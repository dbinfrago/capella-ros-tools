# SPDX-FileCopyrightText: Copyright DB InfraGO AG
# SPDX-License-Identifier: CC0-1.0

# ##############################################################################
# Preamble
# ##############################################################################
cmake_minimum_required(VERSION 3.22)

# set cmake policy to use OLD behavior for FindPythonLibs / FindPythonInterp
# modules are deprecated since cmake 3.12, but rosidl_generator_py***() is still
# using them
# cmake_policy(SET CMP0148 OLD)

project({{pkg_name}}_interface_msgs VERSION 1.0.0)

# ##############################################################################
# Project Wide Setup
# ##############################################################################
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# ##############################################################################
# Dependencies
# ##############################################################################
find_package(ament_cmake REQUIRED)

{% for dependency in dependencies -%}
find_package({{dependency}} REQUIRED)
{% endfor %}

# ##############################################################################
# Main targets
# ##############################################################################
# Targets
file(
  GLOB_RECURSE MSG_FILES
  LIST_DIRECTORIES false
  RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}"
  "msg/*.msg"
  )

# Note: It seems required that the rosidl interface name is the same as
# the project name
rosidl_generate_interfaces(
  ${PROJECT_NAME} ${MSG_FILES}
  DEPENDENCIES
  {% for dependency in dependencies -%}
  {{ dependency }}
  {% endfor %}
)
rosidl_get_typesupport_target(${PROJECT_NAME}_target_name ${PROJECT_NAME}
                              "rosidl_typesupport_cpp")

# Create wrapper target, which has the desired name and not generated ros name
# We use the suffix wrapper_target, because the project name is already taken
# (see above). For ease of use the suffix is removed in the alias target and the
# exported target
add_library(${PROJECT_NAME}_wrapper_target INTERFACE)
set_target_properties(${PROJECT_NAME}_wrapper_target
                      PROPERTIES EXPORT_NAME ${PROJECT_NAME})
add_library(${PROJECT_NAME}::${PROJECT_NAME} ALIAS
            ${PROJECT_NAME}_wrapper_target)
target_link_libraries(${PROJECT_NAME}_wrapper_target
                      INTERFACE ${${PROJECT_NAME}_target_name})

# Installation
install(
  TARGETS ${PROJECT_NAME}_wrapper_target
  EXPORT ${PROJECT_NAME}_wrapper_targetTargets
  INCLUDES
  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

ament_export_dependencies(rosidl_default_runtime)
ament_export_targets(${PROJECT_NAME}_wrapper_targetTargets
                     HAS_LIBRARY_TARGET)

# ##############################################################################
# Tests
# ##############################################################################
if(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME AND BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # find_package(ament_cmake_gtest REQUIRED)
  # ament_lint_auto_find_test_dependencies()
endif()

ament_package()
